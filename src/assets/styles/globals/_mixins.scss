@use "./colours" as *;
@use "./functions" as *;
@use "./variables" as *;
@use "./breakpoints" as *;

@mixin alignCenter {
  display: flex;
  align-items: center;
}

// ------BUTTONS-------------------------------

@mixin btnPrimary {
  cursor: pointer;
  font-family: $ff-red-rose;
  padding: 0.75em 1.25em;
  font-size: 1rem;
  background: getClr($colors, "primary", 50);
  transition: all 0.3s ease-in-out;
  outline: none;
  border: none;
  user-select: none;

  &:hover {
    background: getClr($colors, "primary", 0);
  }
}
@mixin btnSecondary {
  cursor: pointer;
  font-family: $ff-red-rose;
  padding: 0.75em 1.25em;
  color: getClr($colors, "primary", 50);
  display: inline-flex;
  gap: 0.5em;
  justify-content: center;
  align-items: center;
  font-size: 1rem;
  background: getClr($colors, "primary", 900);
  transition: all 0.3s ease-in-out;
  outline: none;
  border: rem(1.5) solid getClr($colors, "primary", 50);
  user-select: none;

  &:hover {
    background: getClr($colors, "primary", 800);
  }

  &:disabled {
    cursor: not-allowed;
  }
}

@mixin btnNeutral {
  cursor: pointer;
  color: getClr($colors, "primary", 200);
  display: inline-flex;
  gap: 0.5em;
  align-items: center;
  outline: none;
  background: none;
  border: none;
  font-size: 1rem;
  user-select: none;
  font-family: $ff-red-rose;

  &:hover,
  &:has(a.active) {
    color: getClr($colors, "primary", 0);
    a {
      text-decoration: underline;
      color: inherit;
      text-underline-offset: rem(4);
    }
  }

  &:disabled {
    cursor: not-allowed;
    color: getClr($colors, "primary", 700);
  }

  @include mobile {
    font-size: 0.875rem;
  }
}

// -------INPUTS--------------------------------

@mixin inputGroup {
  font-family: $ff-red-rose;
  position: relative;
  label {
    display: block;

    color: getClr($colors, "primary", 500);
  }

  input {
    padding: 1rem 1.75rem;
    margin-block: 0.5rem;
    outline: none;
    background: transparent;
    width: 100%;
    font-family: inherit;
    font-weight: 400;
    font-size: 1rem;
    color: getClr($colors, "primary", 100);
    border: rem(1.5) solid getClr($colors, "primary", 700);

    &::placeholder {
      font-size: 1rem;
      font-family: inherit;
      color: getClr($colors, "primary", 700);
    }

    &:focus {
      border-color: getClr($colors, "primary", 300);
    }

    @include mobile {
      font-size: 0.875rem;

      &::placeholder {
        font-size: 0.875rem;
      }
    }
  }

  .eye-icon {
    position: absolute;
    top: 50%;
    right: 1.75rem;
    font-size: 1.5rem;
    color: getClr($colors, "primary", 300);
    cursor: pointer;

    @include mobile {
      right: 1.25rem;
    }
  }

  &.error {
    input {
      border-color: getClr($colors, "error", 500);
    }

    .eye-icon {
      top: 40%;
    }

    span:not(.eye-icon) {
      @include alignCenter;
      color: getClr($colors, "error", 500);
      gap: 0.5rem;
    }
  }
}

@mixin radioGroup {
  user-select: none;
  label {
    display: inline-block;
    position: relative;
    padding-inline-start: rem(35);
    cursor: pointer;

    input {
      display: none;

      &:checked ~ span {
        border-color: getClr($colors, "primary", 50);
        &::after {
          transform: translate(-50%, -50%) scale(1);
        }
      }
    }

    span {
      width: 1.5rem;
      height: 1.5rem;
      border: rem(2) solid getClr($colors, "primary", 300);
      border-radius: 50%;
      display: block;
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      transition: border-color 0.3s ease;

      &::after {
        content: "";
        height: 0.8rem;
        width: 0.8rem;
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        background: getClr($colors, "primary", 50);
        border-radius: 50%;
        transform: translate(-50%, -50%) scale(0);
      }
    }

    &:hover span {
      border-color: getClr($colors, "primary", 50);
    }
  }
}
@mixin checkBoxGroup {
  user-select: none;
  label {
    display: inline-block;
    position: relative;
    padding-inline-start: rem(35);
    cursor: pointer;
    color: getClr($colors, "primary", 0);

    input {
      display: none;

      &:checked ~ span {
        border-color: getClr($colors, "primary", 50);
        &::after {
          transform: translate(-50%, -60%) scale(1) rotate(45deg);
        }
      }
    }

    span {
      width: 1.5rem;
      height: 1.5rem;
      border: rem(2) solid getClr($colors, "primary", 300);
      border-radius: rem(5);
      display: block;
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      transition: border-color 0.3s ease;

      &::after {
        content: "";
        width: 0.3rem;
        height: 0.9rem;
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        border: solid getClr($colors, "primary", 50);
        border-width: 0 rem(4) rem(4) 0;
        transform: translate(-50%, -50%) scale(0);
      }
    }

    &:hover span {
      border-color: getClr($colors, "primary", 50);
    }
  }
}

// -------CONTAINER--------------------------------

@mixin twoGridContainer($frac) {
  border: rem(2) solid getClr($colors, "primary", 200);

  display: grid;
  grid-template-columns: $frac;

  & > div:first-of-type {
    border-right: rem(2) solid getClr($colors, "primary", 200);
    padding: 2.5rem;
  }

  & > div:last-of-type {
    padding: 1.75rem;
  }

  @include mobile {
    grid-template-columns: 1fr;

    & > div:first-of-type {
      border-right: none;
      border-bottom: rem(2) solid getClr($colors, "primary", 200);
      padding: 1.25rem;
    }

    & > div:last-of-type {
      padding: 1.75rem 1.25rem;
    }
  }
}
